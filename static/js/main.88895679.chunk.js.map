{"version":3,"sources":["Components/Section/Section.module.css","Components/Filter/Filter.module.css","Components/Constctlist/Constctlist.module.css","Components/Section/Section.js","Components/Form/Form.js","Components/Constctlist/Constctlist.js","Components/Filter/Filter.js","App.js","index.js","App.module.css","Components/Form/Form.module.css"],"names":["module","exports","Section","title","children","className","s","sectionWrp","Form","state","name","number","hendleChangeForm","e","target","value","setState","hendleSubmitForm","preventDefault","addContact","props","validationForm","id","uuidv4","restartForm","uniqueContact","alert","this","contactForm","onSubmit","type","placeholder","onChange","addContactBtn","Component","Contactlist","contacts","onRemove","contactListWrp","map","contact","contactItem","contactItemText","contactItemBtn","onClick","Filter","filter","filterInput","BhoneBook","findeContact","some","hendleRemoveContact","hendleFilterChange","getVisibleContacts","toLowerCase","includes","ContactsInLocalStorage","JSON","parse","localStorage","getItem","prevState","setItem","stringify","visibleContacts","length","noContactMessage","filterWrp","filterTittle","Constctlist","ReactDOM","render","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,WAAa,8B,mBCA/BD,EAAOC,QAAU,CAAC,YAAc,8B,kBCAhCD,EAAOC,QAAU,CAAC,eAAiB,oCAAoC,YAAc,iCAAiC,gBAAkB,qCAAqC,eAAiB,sC,+HCQ/KC,EANC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASC,UAAWC,IAAEC,WAAtB,UACE,oBAAIF,UAAU,gBAAd,SAA+BF,IAC/B,qBAAKE,UAAU,iBAAf,SAAiCD,Q,gCCuEtBI,E,4MAtEbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAQVC,iBAAmB,SAACC,GAAO,IAAD,EACAA,EAAEC,OAAlBJ,EADgB,EAChBA,KAAMK,EADU,EACVA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,iBAAmB,SAACJ,GAClBA,EAAEK,iBADsB,MAGC,EAAKT,MAAtBC,EAHgB,EAGhBA,KAAMC,EAHU,EAGVA,OACNQ,EAAe,EAAKC,MAApBD,WACiB,EAAKE,mBAK9BF,EAAW,CAAEG,GAAIC,cAAUb,OAAMC,WACjC,EAAKa,gB,EAGPH,eAAiB,WAAO,IAAD,EACI,EAAKZ,MAAtBC,EADa,EACbA,KAAMC,EADO,EACPA,OACNc,EAAkB,EAAKL,MAAvBK,cAER,OAAKf,GAASC,EAIPc,EAAcf,IAHnBgB,MAAM,gIACC,I,EAIXF,YAAc,kBAAM,EAAKR,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,uDAC5C,IAAD,EACkBgB,KAAKlB,MAAtBC,EADD,EACCA,KAAMC,EADP,EACOA,OACd,OACE,uBAAMN,UAAWC,IAAEsB,YAAaC,SAAUF,KAAKV,iBAA/C,UACE,gCACE,uBACEP,KAAK,OACLK,MAAOL,EACPoB,KAAK,OACLC,YAAY,UACZC,SAAUL,KAAKf,qBAGnB,gCACE,uBACEF,KAAK,SACLK,MAAOJ,EACPmB,KAAK,MACLC,YAAY,WACZC,SAAUL,KAAKf,qBAGnB,wBAAQP,UAAWC,IAAE2B,cAAeH,KAAK,SAAzC,gC,GA/DWI,a,gBC6BJC,EAhCK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC/B,OACE,oBAAIhC,UAAWC,IAAEgC,eAAjB,SACGF,EAASG,KAAI,SAACC,GAAa,IAClBlB,EAAqBkB,EAArBlB,GAAIZ,EAAiB8B,EAAjB9B,KAAMC,EAAW6B,EAAX7B,OAClB,OACE,qBAAIN,UAAWC,IAAEmC,YAAjB,UACE,sBAAKpC,UAAWC,IAAEoC,gBAAlB,UACE,iCAAOhC,EAAP,OACA,+BAAOC,OAET,wBAAQN,UAAWC,IAAEqC,eAAgBC,QAAS,kBAAMP,EAASf,IAA7D,sBALiCA,S,iBCW9BuB,EAlBA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQd,EAAe,EAAfA,SACxB,OACE,uBACE3B,UAAWC,IAAEyC,YACbjB,KAAK,OACLpB,KAAK,SACLK,MAAO+B,EACPd,SAAU,gBAAGlB,EAAH,EAAGA,OAAH,OAAgBkB,EAASlB,EAAOC,QAC1CgB,YAAY,qG,gBCFGiB,E,4MACnBvC,MAAQ,CACN2B,SAAU,CACR,CAAEd,GAAI,OAAQZ,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEW,GAAI,OAAQZ,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEW,GAAI,OAAQZ,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEW,GAAI,OAAQZ,KAAM,iBAAkBC,OAAQ,cAEhDmC,OAAQ,I,EAgBV3B,WAAa,SAACqB,GAAD,OACX,EAAKxB,UAAS,gBAAGoB,EAAH,EAAGA,SAAH,MAAmB,CAAEA,SAAS,GAAD,mBAAMA,GAAN,CAAgBI,S,EAE7Df,cAAgB,SAACf,GAAU,IAEnBuC,EADe,EAAKxC,MAAlB2B,SACsBc,MAAK,SAACV,GAAD,OAAaA,EAAQ9B,OAASA,KAIjE,OAFAuC,GAAgBvB,MAAM,6HAEduB,G,EAGVE,oBAAsB,SAAC7B,GACrB,EAAKN,UAAS,kBAAmB,CAC/BoB,SADY,EAAGA,SACIU,QAAO,SAACN,GAAD,OAAaA,EAAQlB,KAAOA,U,EAI1D8B,mBAAqB,SAACN,GACpB,EAAK9B,SAAS,CAAE8B,Y,EAElBO,mBAAqB,WAAO,IAAD,EACI,EAAK5C,MAA1B2B,EADiB,EACjBA,SAAUU,EADO,EACPA,OAClB,OAAOV,EAASU,QAAO,SAACN,GAAD,OACrBA,EAAQ9B,KAAK4C,cAAcC,SAAST,EAAOQ,mB,kEApC7C,IAAME,EAAyBC,KAAKC,MAAMC,aAAaC,QAAQ,aAC3DJ,GACF7B,KAAKX,SAAS,CAAEoB,SAAUoB,M,yCAIXK,GACbA,IAAclC,KAAKlB,OACrBkD,aAAaG,QAAQ,WAAYL,KAAKM,UAAUpC,KAAKlB,MAAM2B,a,+BAgCrD,IAAD,EACsBT,KAAKlB,MAA1B2B,EADD,EACCA,SAAUU,EADX,EACWA,OACZT,EAAWV,KAAKwB,oBAChBa,EAAkBrC,KAAK0B,qBAC7B,OACE,qCACE,cAAC,EAAD,CAASlD,MAAM,YAAf,SACE,cAAC,EAAD,CACEgB,WAAYQ,KAAKR,WACjBM,cAAeE,KAAKF,kBAGxB,eAAC,EAAD,CAAStB,MAAM,WAAf,UACuB,IAApBiC,EAAS6B,OACR,mBAAG5D,UAAWC,IAAE4D,iBAAhB,6IAEA,sBAAK7D,UAAWC,IAAE6D,UAAlB,UACE,oBAAI9D,UAAWC,IAAE8D,aAAjB,mCACA,cAAC,EAAD,CAAQtB,OAAQA,EAAQd,SAAUL,KAAKyB,wBAG3C,cAACiB,EAAD,CAAajC,SAAU4B,EAAiB3B,SAAUA,c,GAzErBH,aCJvCoC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U,kBCHjDzE,EAAOC,QAAU,CAAC,UAAY,uBAAuB,aAAe,0BAA0B,iBAAmB,gC,kBCAjHD,EAAOC,QAAU,CAAC,YAAc,0BAA0B,cAAgB,+B","file":"static/js/main.88895679.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionWrp\":\"Section_sectionWrp__3OG1O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__2UfOM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListWrp\":\"Constctlist_contactListWrp__3B4qP\",\"contactItem\":\"Constctlist_contactItem__2xLVl\",\"contactItemText\":\"Constctlist_contactItemText__2OjFG\",\"contactItemBtn\":\"Constctlist_contactItemBtn__16-41\"};","import s from \"./Section.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => (\n  <section className={s.sectionWrp}>\n    <h1 className=\"sectionTittle\">{title}</h1>\n    <div className=\"sectionContent\">{children}</div>\n  </section>\n);\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.any.isRequired,\n};\n","import { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\n\nimport s from \"./Form.module.css\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  static propTypes = {\n    addContact: PropTypes.func.isRequired,\n    uniqueContact: PropTypes.func.isRequired,\n  };\n\n  hendleChangeForm = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  hendleSubmitForm = (e) => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n    const { addContact } = this.props;\n    const isvalidationForm = this.validationForm();\n\n    if (!isvalidationForm) return;\n    // console.log({ id: uuidv4(), name, number });\n\n    addContact({ id: uuidv4(), name, number });\n    this.restartForm();\n  };\n\n  validationForm = () => {\n    const { name, number } = this.state;\n    const { uniqueContact } = this.props;\n\n    if (!name || !number) {\n      alert(\"Чтото вы забыли указать\");\n      return false;\n    }\n    return uniqueContact(name);\n  };\n  restartForm = () => this.setState({ name: \"\", number: \"\" });\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={s.contactForm} onSubmit={this.hendleSubmitForm}>\n        <label>\n          <input\n            name=\"name\"\n            value={name}\n            type=\"text\"\n            placeholder=\"Name...\"\n            onChange={this.hendleChangeForm}\n          ></input>\n        </label>\n        <label>\n          <input\n            name=\"number\"\n            value={number}\n            type=\"tel\"\n            placeholder=\"Phone...\"\n            onChange={this.hendleChangeForm}\n          ></input>\n        </label>\n        <button className={s.addContactBtn} type=\"submit\">\n          Add Contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import PropTypes, { exact } from \"prop-types\";\nimport s from \"./Constctlist.module.css\";\n\nconst Contactlist = ({ contacts, onRemove }) => {\n  return (\n    <ul className={s.contactListWrp}>\n      {contacts.map((contact) => {\n        const { id, name, number } = contact;\n        return (\n          <li className={s.contactItem} key={id}>\n            <div className={s.contactItemText}>\n              <span>{name}:</span>\n              <span>{number}</span>\n            </div>\n            <button className={s.contactItemBtn} onClick={() => onRemove(id)}>\n              delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContactlist.propTypes = {\n  contacts: PropTypes.arrayOf(\n    exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default Contactlist;\n","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <input\n      className={s.filterInput}\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={({ target }) => onChange(target.value)}\n      placeholder=\"Кого искать будем???\"\n    />\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { Component } from \"react\";\n\nimport Section from \"./Components/Section/Section\";\nimport Form from \"./Components/Form\";\nimport Constctlist from \"./Components/Constctlist\";\nimport Filter from \"./Components/Filter\";\nimport s from \"./App.module.css\";\n\nexport default class BhoneBook extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const ContactsInLocalStorage = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (ContactsInLocalStorage) {\n      this.setState({ contacts: ContactsInLocalStorage });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState !== this.state) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (contact) =>\n    this.setState(({ contacts }) => ({ contacts: [...contacts, contact] }));\n\n  uniqueContact = (name) => {\n    const { contacts } = this.state;\n    const findeContact = contacts.some((contact) => contact.name === name);\n\n    findeContact && alert(\"есть уже такой контакт!!!\");\n\n    return !findeContact;\n  };\n\n  hendleRemoveContact = (id) => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  hendleFilterChange = (filter) => {\n    this.setState({ filter });\n  };\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const onRemove = this.hendleRemoveContact;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <Form\n            addContact={this.addContact}\n            uniqueContact={this.uniqueContact}\n          />\n        </Section>\n        <Section title=\"Contacts\">\n          {contacts.length === 0 ? (\n            <p className={s.noContactMessage}>Тут будут ваши контакты )))</p>\n          ) : (\n            <div className={s.filterWrp}>\n              <h4 className={s.filterTittle}>Finde contact by name</h4>\n              <Filter filter={filter} onChange={this.hendleFilterChange} />\n            </div>\n          )}\n          <Constctlist contacts={visibleContacts} onRemove={onRemove} />\n        </Section>\n      </>\n    );\n  }\n}\n\n// componentDidMount() {\n//   const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\n//   this.setState({ contacts: contacts });\n// }\n\n// componentDidUpdate(prevState) {\n//   if (prevState !== this.state) {\n//     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//   }\n// }\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrp\":\"App_filterWrp__hRx2B\",\"filterTittle\":\"App_filterTittle__2qt3t\",\"noContactMessage\":\"App_noContactMessage__CASM8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"Form_contactForm__1iKo9\",\"addContactBtn\":\"Form_addContactBtn__1F3EU\"};"],"sourceRoot":""}